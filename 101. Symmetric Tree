/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool check(TreeNode* lSub, TreeNode* rSub)
    {
        //base cases
        if(lSub == NULL && rSub == NULL)
            return true;

        if(lSub == NULL || rSub == NULL)
            return false;

        if(lSub -> val != rSub -> val)
            return false;
        

        bool leftAns = check(lSub -> left, rSub -> right);
        bool rightAns = check(lSub -> right, rSub -> left);

        return leftAns && rightAns;
    }

    bool isSymmetric(TreeNode* root) {
        return check(root -> left , root -> right);
    }
};
