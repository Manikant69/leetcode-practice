/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root, int &targetSum, vector<int>&temp, vector<vector<int>>&ans, int &tempSum)
    {
        if(root == NULL)
        {
            return;
        }


        tempSum += root -> val;
        temp.push_back(root -> val);

        if(root -> left == NULL && root -> right == NULL)
        {
            if(tempSum == targetSum)
            {
                ans.push_back(temp);
            }
        }

        solve(root -> left, targetSum, temp, ans, tempSum);
        solve(root -> right, targetSum, temp, ans, tempSum);

        tempSum -= root -> val;
        temp.pop_back();

    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> ans;

        vector<int> temp;

        int sum = 0;

        solve(root, targetSum, temp, ans, sum);

        return ans;
    }
};
