class Solution {
public:
    string addStrings(string num1, string num2) {
        int n = num1.size() - 1;
        int m = num2.size() - 1;
        int carry = 0; 

        string ans;
        while( n >= 0 || m >= 0 )
        {
            if(n >= 0 && m >= 0)
            {
            int r = ((num1[n]-'0')+(num2[m]-'0')+carry)%10;
            carry = ((num1[n]-'0')+(num2[m]-'0')+carry)/10;
            ans+=(r + '0');
            n--; m--;
            }

            else if( m >= 0 )
            {
            int r= ((num2[m]-'0')+carry)%10;
            carry = ((num2[m]-'0')+carry)/10;
            ans+=(r + '0');
            m--;
            }

            else 
            {
            int r= ((num1[n]-'0')+carry)%10;
            carry = ((num1[n]-'0')+carry)/10;
            ans+=(r + '0');
            n--;
            }
        }

         if(carry > 0)
            ans.push_back(carry+'0');

        reverse(ans.begin(), ans.end());

        return ans;
    }
};
