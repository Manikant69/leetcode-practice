class Solution {
public:
    int myAtoi(string s) {
        int sign = 1, i = 0;
        long long ans = 0;

        //removing leading zeros
        while( i < s.length() && s[i] == ' ')
        {
            i++;
        }

        //accessing the sign
        if(s[i] == '-' || s[i] == '+')
        {
            sign = s[i++] == '-' ? -1 : 1;
        }

        bool flag = true;

        while(i < s.length())
        {
            if(s[i] >= '0' && s[i] <= '9')
            {
                ans = (ans * 10) + (s[i] - '0');

                if((ans * sign) >= INT_MAX)
                    return INT_MAX;
                if((ans * sign) <= INT_MIN)
                    return INT_MIN;
            }
            else
            {
                break;
            }
            i++;
        }

       return (ans * sign);
       
    }
};
