/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root == NULL){
            return NULL;
        }

        //both exits in left subtree
        if((root -> val > p -> val) && (root -> val > q -> val)){
            return lowestCommonAncestor(root -> left, q, p);
        }

        //both exits in right subtree
        else if((root -> val < p -> val) && (root -> val < q -> val)){
            return lowestCommonAncestor(root -> right, q, p);
        }
        else{//it means this node is between both the node according to definition this is the right node 
            return root;
        }
    }
};
