/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(int maxi, vector<int> pre, int &i)
    {
        if(i >= pre.size() || pre[i] > maxi)
        {
            return NULL;
        }

        TreeNode* root = new TreeNode(pre[i++]);

        root -> left = solve(root -> val, pre, i);

        root -> right = solve(maxi, pre, i);

        return root;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int s = 0, e = preorder.size()-1, maxi = INT_MAX;
        int index = 0;
        TreeNode* root ;

        return solve(maxi, preorder, index);
    }
};
