/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        queue<TreeNode*> q;

        if(root == NULL)
        {
            return ans;
        }

        q.push(root);
        q.push(NULL);

        vector<int> oneLevelEle;

        while(!q.empty())
        {
            TreeNode* front = q.front();
            q.pop();

            if(front == NULL)
            {
                ans.push_back(oneLevelEle);
                oneLevelEle={};
                if(!q.empty())
                {
                    q.push(NULL);
                }
            }
            else
            {
                oneLevelEle.push_back(front -> val);

                if(front -> left)
                {
                    q.push(front->left);
                }
                if(front -> right)
                {
                    q.push(front -> right);
                }
            }
        }

        return ans;
    }
};
