//in O(nlogn)

class Solution {
public:
   vector<int> twoSum(vector<int>& nums, int target) {
       int n=nums.size();
      vector< pair<int, int>>p;
        for(int i=0; i<n; i++)
        {
            p.push_back(make_pair(nums[i],i));
        }
        sort(p.begin(), p.end());

        int i=0, j=n-1;
        while(i<j)
        {
            if((p[i].first + p[j].first)==target)
                return {p[i].second, p[j].second};
            else if((p[i].first + p[j].first)<target)
                  i++;
            else
                  j--;
        }
        return {}; 
    }
};



//in O(n^2)

class Solution {
public:
   vector<int> twoSum(vector<int>& nums, int target) {
        for(int i=0;i<nums.size();i++)
        //For first element....                 
        {
            for(int j=i+1;j<nums.size();j++)
            {  //and second....  
                if((nums[i]+nums[j])==target){
                   return {i,j}; }
            }
        }
        return {};
        
    }
};
